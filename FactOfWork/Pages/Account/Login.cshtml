@page
@model LoginModel

<div class="bg-primary text-center text-white p-2"><h4>Вход</h4></div>
<div class="d-flex justify-content-center align-items-center text-center container">
    <form method="post" style="width: 40%">
        <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
        <div class="m-1 text-danger" asp-validation-summary="All"></div>
        <div class="list-group">
            @Html.LabelFor(m => m.UserName, "Имя пользователя:")
            @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control text-center" } })
        </div>
        <div class="list-group">
            @Html.LabelFor(m => m.Password, "Пароль:")
            @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control text-center", @type = "password" } })
        </div>
        <br />
        <button class="btn btn-primary" type="submit">Войти</button>
    </form>
</div>
    @functions
{
        public class LoginModel : PageModel
        {
            private SignInManager<AppUser> signInManager;

            public LoginModel(SignInManager<AppUser> signinMgr)
            {
                signInManager = signinMgr;
            }

            [BindProperty]
            [Required]
            public string UserName { get; set; }

            [BindProperty]
            [Required]
            public string Password { get; set; }

            [BindProperty(SupportsGet = true)]
            public string ReturnUrl { get; set; }

            public async Task<IActionResult> OnPostAsync()
            {
                if (ModelState.IsValid)
                {
                    Microsoft.AspNetCore.Identity.SignInResult result = await signInManager.PasswordSignInAsync(UserName, Password, false, false);
                    if (result.Succeeded)
                        return Redirect(ReturnUrl ?? "/");

                    ModelState.AddModelError("", "Ошибка ввода логина или пароля");
                }
                return Page();
            }
        }
    }
